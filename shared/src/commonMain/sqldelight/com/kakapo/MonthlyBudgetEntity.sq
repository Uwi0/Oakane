CREATE TABLE MonthlyBudgetTable (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    totalBudget REAL NOT NULL,
    spentAmount REAL NOT NULL DEFAULT 0,
    startDate INTEGER NOT NULL,
    endDate INTEGER NOT NULL,
    createdAt INTEGER NOT NULL DEFAULT (strftime('%s', 'now') * 1000),
    updatedAt INTEGER NOT NULL DEFAULT (strftime('%s', 'now') * 1000)
);

insertMonthlyBudget:
INSERT OR REPLACE INTO MonthlyBudgetTable(
    totalBudget,
    spentAmount,
    startDate,
    endDate,
    createdAt,
    updatedAt
)
VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?
);

countCurrentRows:
SELECT COUNT(*) FROM MonthlyBudgetTable
WHERE :currentTimeStamp BETWEEN startDate AND endDate;

getMonthlyBudget:
SELECT * FROM MonthlyBudgetTable
ORDER BY id DESC
LIMIT 1;

updateMonthlyBudget:
UPDATE MonthlyBudgetTable
SET totalBudget = ?,
    updatedAt = ?
WHERE id = ?;

getTotalBudgetWith:
SELECT totalBudget
FROM MonthlyBudgetTable
WHERE createdAt >= ? AND createdAt <= ?;

selectActiveMonthlyBudgets:
SELECT id
FROM MonthlyBudgetTable
WHERE strftime('%s', 'now') * 1000 BETWEEN startDate AND endDate
LIMIT 1;

getMonthlyBudgetForBackup:
SELECT * FROM MonthlyBudgetTable;

insertMonthlyBudgetBackuo:
INSERT OR REPLACE INTO MonthlyBudgetTable(id, totalBudget, spentAmount, startDate, endDate, createdAt, updatedAt)
VALUES (?, ?, ?, ?, ?, ?, ?);