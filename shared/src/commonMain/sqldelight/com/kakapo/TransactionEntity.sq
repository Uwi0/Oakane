CREATE TABLE TransactionTable (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    amount REAL NOT NULL,
    type INTEGER NOT NULL,
    category INTEGER NOT NULL,
    wallet INTEGER NOT NULL DEFAULT 0,
    dateCreated INTEGER NOT NULL,
    note Text,
    FOREIGN KEY (category) REFERENCES CategoryTable(id),
    FOREIGN KEY (wallet) REFERENCES WalletTable(id) ON DELETE CASCADE
);

insert:
INSERT OR REPLACE INTO TransactionTable (
    title,
    amount,
    type,
    category,
    dateCreated,
    note
)
VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?
);

updateTransaction:
UPDATE TransactionTable
SET title = ?,
    amount = ?,
    type = ?,
    category = ?,
    dateCreated = ?,
    note = ?
WHERE id = ?;

deleteTransaction:
DELETE FROM TransactionTable
WHERE id = ?;

getTransactions:
SELECT
    TransactionTable.id AS transactionId,
    TransactionTable.title,
    TransactionTable.amount,
    TransactionTable.type AS transactionType,
    TransactionTable.dateCreated,
    TransactionTable.note,
    CategoryTable.id AS categoryId,
    CategoryTable.name AS categoryName,
    CategoryTable.icon AS categoryIcon,
    CategoryTable.color AS categoryColor,
    CategoryTable.isDefault AS defaultCategory
FROM
    TransactionTable
INNER JOIN
    CategoryTable
ON
    TransactionTable.category = CategoryTable.id;

getTransactionBy:
SELECT
    TransactionTable.id AS transactionId,
    TransactionTable.title,
    TransactionTable.amount,
    TransactionTable.type AS transactionType,
    TransactionTable.dateCreated,
    TransactionTable.note,
    CategoryTable.id AS categoryId,
    CategoryTable.name AS categoryName,
    CategoryTable.icon AS categoryIcon,
    CategoryTable.color AS categoryColor,
    CategoryTable.isDefault AS defaultCategory
FROM
    TransactionTable
INNER JOIN
    CategoryTable
ON
    TransactionTable.category = CategoryTable.id
WHERE transactionId = ?;