CREATE TABLE  WalletTable (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    balance REAL NOT NULL,
    color TEXT NOT NULL,
    icon TEXT NOT NULL,
    isDefaultIcon INTEGER NOT NULL,
    createdAt INTEGER NOT NULL DEFAULT (strftime('%s', 'now') * 1000),
    updateAt INTEGER NOT NULL DEFAULT (strftime('%s', 'now') * 1000)
);

createDefaultWallet:
INSERT OR REPLACE INTO WalletTable(name, balance, color, icon, isDefaultIcon)
VALUES ('My Wallet', 0.0, '0xFF4CAF50', 'Wallet', 1);

checkIfExist:
SELECT COUNT(*) FROM WalletTable;

updateWalletTransaction:
UPDATE WalletTable
SET balance = balance + ?,
    updateAt = ?
WHERE id = ?;

getWalletBy:
SELECT * FROM WalletTable
WHERE id = ?;

insertWallet:
INSERT OR REPLACE INTO WalletTable(name, balance, color, icon, isDefaultIcon)
VALUES (?, ?, ?, ?, ?);

getWallets:
SELECT
    w.id AS walletId,
    w.name AS walletName,
    w.balance AS walletBalance,
    w.color AS walletColor,
    w.icon AS walletIcon,
    w.isDefaultIcon AS walletIsDefaultIcon,
    w.createdAt AS walletCreatedAt,
    w.updateAt AS walletUpdateAt,
    SUM(CASE WHEN t.type = 1 THEN t.amount ELSE 0 END) AS totalIncome,
    SUM(CASE WHEN t.type = 0 THEN t.amount ELSE 0 END) AS totalExpense
FROM WalletTable w
LEFT JOIN TransactionTable t ON w.id = t.walletId
GROUP BY w.id;

updateWallet:
UPDATE WalletTable
SET name = ?,
    balance = ?,
    color = ?,
    icon = ?,
    isDefaultIcon = ?,
    updateAt = ?
WHERE id = ?;

deleteWallet:
DELETE FROM WalletTable WHERE id = ?;

getTotalBalance:
SELECT COALESCE(SUM(balance), 0) AS totalBalance FROM WalletTable;

getWalletsForBackup:
SELECT * FROM WalletTable;

insertBakupWallets:
INSERT OR REPLACE INTO WalletTable(id, name, balance, color, icon, isDefaultIcon, createdAt, updateAt)
VALUES(?, ?, ?, ?, ?, ?, ?, ?);
